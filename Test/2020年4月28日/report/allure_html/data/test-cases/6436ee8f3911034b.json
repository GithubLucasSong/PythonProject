{
  "uid" : "6436ee8f3911034b",
  "name" : "cnodejs项目",
  "fullName" : "scripts.test_case#test_case",
  "historyId" : "dff2449a58932380454c49d88e11fc4e",
  "time" : {
    "start" : 1588060075692,
    "stop" : 1588060076147,
    "duration" : 455
  },
  "description" : "/message/mark_all 标记全部已读",
  "descriptionHtml" : "<p>/message/mark_all 标记全部已读</p>\n",
  "status" : "broken",
  "statusMessage" : "UnicodeDecodeError: 'utf-8' codec can't decode byte 0xfc in position 10: invalid start byte",
  "statusTrace" : "def teardown_module():\n        import subprocess\n        subprocess.call(\"allure generate report/result -o report/allure_html --clean\", shell=True)\n    \n    \n        import zipfile  # 导入模块\n        BASE_DIR = 'report'\n        base_dir = os.path.join(BASE_DIR, 'allure_html')  # 要压缩文件夹的根路径\n        zip_file_name = 'case.zip'\n        f = zipfile.ZipFile(os.path.join(BASE_DIR, zip_file_name), 'w', zipfile.ZIP_DEFLATED)\n        for dir_path, dir_name, file_names in os.walk(base_dir):\n            # 要是不replace，就从根目录开始复制\n            file_path = dir_path.replace(base_dir, '')\n            # 实现当前文件夹以及包含的所有文件\n            file_path = file_path and file_path + os.sep or ''\n            for file_name in file_names:\n                f.write(os.path.join(dir_path, file_name), file_path + file_name)\n        f.close()\n    \n    \n    \n        # 发送邮件\n        # 第三方 SMTP 服务\n        mail_host = \"smtp.qq.com\"  # 设置服务器   # 勿动\n        mail_user = \"1433880147@qq.com\"  # 用户名\n        mail_pass = \"fictfnyfncnihhbj\"  # 口令\n        # 设置收件人和发件人\n        sender = '1433880147@qq.com'\n        receivers = ['732336318@qq.com', ]  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱\n    \n        # 创建一个带附件的实例对象\n        message = MIMEMultipart()\n    \n        # 邮件主题、收件人、发件人\n        subject = '宋煜'  # 邮件主题\n        message['Subject'] = Header(subject, 'utf-8')\n        message['From'] = Header(\"{}\".format(sender), 'utf-8')  # 发件人\n        message['To'] = Header(\"{}\".format(';'.join(receivers)), 'utf-8')  # 收件人\n    \n        # 邮件正文内容\n        send_content = 'hi man，你收到附件了吗？'\n        content_obj = MIMEText(send_content, 'plain', 'utf-8')  # 第一个参数为邮件内容\n        message.attach(content_obj)\n    \n        # 构造附件\n        file_path = 'report/case.zip'\n        f = open(file_path,'r',encoding='utf-8')\n>       send_content = f.read()\n\nscripts\\test_case.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <encodings.utf_8.IncrementalDecoder object at 0x00000294152A9BE0>\ninput = b'PK\\x03\\x04\\x14\\x00\\x00\\x00\\x08\\x00\\xfc}\\x9cP\\xea\\xd9b\\x1a\\x1d\\xd8\\x02\\x00\\x938\\n\\x00\\x06\\x00\\x00\\x00app.js\\xec\\xbdi{...b6\\x81$\\xfd\\x0f\\x00widgets/summary.jsonPK\\x05\\x06\\x00\\x00\\x00\\x00\\x7f\\x00\\x7f\\x00\\xcd&\\x00\\x00\\x1a\\xfe\\x0f\\x00\\x00\\x00'\nfinal = True\n\n    def decode(self, input, final=False):\n        # decode input (taking the buffer into account)\n        data = self.buffer + input\n>       (result, consumed) = self._buffer_decode(data, self.errors, final)\nE       UnicodeDecodeError: 'utf-8' codec can't decode byte 0xfc in position 10: invalid start byte\n\nd:\\python3.8.0\\lib\\codecs.py:322: UnicodeDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Module__pytest_setup_module",
    "time" : {
      "start" : 1588060070516,
      "stop" : 1588060070516,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ {
    "name" : "_Module__pytest_setup_module::0",
    "time" : {
      "start" : 1588060076148,
      "stop" : 1588060079020,
      "duration" : 2872
    },
    "status" : "broken",
    "statusMessage" : "UnicodeDecodeError: 'utf-8' codec can't decode byte 0xfc in position 10: invalid start byte\n",
    "statusTrace" : "  File \"d:\\python3.8.0\\lib\\site-packages\\allure_commons\\_allure.py\", line 185, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"d:\\python3.8.0\\lib\\site-packages\\_pytest\\fixtures.py\", line 800, in _teardown_yield_fixture\n    next(it)\n  File \"d:\\python3.8.0\\lib\\site-packages\\_pytest\\python.py\", line 476, in xunit_setup_module_fixture\n    _call_with_optional_argument(teardown_module, request.module)\n  File \"d:\\python3.8.0\\lib\\site-packages\\_pytest\\python.py\", line 636, in _call_with_optional_argument\n    func()\n  File \"D:\\Python s28\\PythonProject\\Test\\2020年4月28日\\scripts\\test_case.py\", line 107, in teardown_module\n    send_content = f.read()\n  File \"d:\\python3.8.0\\lib\\codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "scripts"
  }, {
    "name" : "suite",
    "value" : "test_case"
  }, {
    "name" : "host",
    "value" : "LAPTOP-F4FFJE92"
  }, {
    "name" : "thread",
    "value" : "92088-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "scripts.test_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "item",
    "value" : "{'case_num': 'cnodejs006', 'case_title': 'cnodejs项目', 'case_description': '/message/mark_all 标记全部已读', 'case_url': 'https://cnodejs.org/api/v1/message/mark_all', 'case_method': 'post', 'case_params': '', 'case_expect': '{\"success\":\"false\"}', 'other': '咱们没有用户 accessToken，所以返回为false就算对'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "6436ee8f3911034b.json",
  "parameterValues" : [ "{'case_num': 'cnodejs006', 'case_title': 'cnodejs项目', 'case_description': '/message/mark_all 标记全部已读', 'case_url': 'https://cnodejs.org/api/v1/message/mark_all', 'case_method': 'post', 'case_params': '', 'case_expect': '{\"success\":\"false\"}', 'other': '咱们没有用户 accessToken，所以返回为false就算对'}" ]
}